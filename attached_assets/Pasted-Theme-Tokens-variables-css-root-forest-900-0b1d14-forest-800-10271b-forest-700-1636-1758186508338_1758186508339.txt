Theme Tokens (variables.css)
:root{
  --forest-900:#0b1d14; --forest-800:#10271b; --forest-700:#163628;
  --moss-600:#2f6b4f;  --moss-500:#3e8f6a;  --moss-400:#59a986;
  --leaf-300:#8fd3b0;  --leaf-200:#c7ecd9;  --sun-400:#f0c574;
  --stone-800:#1c2421; --stone-700:#232c28; --stone-600:#2e3834;
  --ink-200:#d7e8e0;  --white:#fff; --danger:#e65a5a;

  --bg:var(--forest-900);
  --panel:rgba(22,54,40,.72);
  --ring:var(--sun-400);
  --radius:16px; --radius-sm:10px;
  --shadow:0 12px 28px rgba(0,0,0,.35);
  --blur:12px; --trans:220ms cubic-bezier(.2,.7,.2,1);
}


Use glass panels: background:var(--panel); backdrop-filter:blur(var(--blur)); border:1px solid rgba(255,255,255,.08).

App Shell

Sidebar (collapsed 80px / expanded 280px on hover): icons + labels, section headers, active state.

Topbar: page title, global search (nonfunctional), user menu, theme toggle (Dark default).

Content: responsive container.

Global notice: small banner “Demo UI. No backend.”

Sidebar Items

Dashboard

Cases

Knowledgebase

Data Master ▸ Officers (tabs: CCF, DCF, ACF, RFO)

Upload Data

Logout (returns to /login without clearing anything)

Routing

Hash routes: /login, /dashboard, /cases, /knowledgebase, /officers/ccf, /officers/dcf, /officers/acf, /officers/rfo, /upload.

Default if hash missing: /login.

“Auth” is mocked: submitting the login form just routes to /dashboard. No validation against data.

Pages (UI only)
Login (/login)

Full-screen parallax forest silhouettes, noise overlay, animated sunbeams.

Center card: logo, Hello Forest, username, password, show/hide toggle, “Log in”.

On submit: router.go('/dashboard').

Dashboard (/dashboard)

KPI cards (read-only numbers from demo-data.js): Today’s Calls, Open Cases, Avg Response, Public KB.

Mini charts: simple canvas line & bar charts (hand-rolled, no libs).

Recent Activity list (static items).

Quick Actions: buttons that navigate to “Create Case” drawer on Cases page and “New Article” on KB page (drawer opens with empty fields but save just closes).

Cases (/cases)

Toolbar filters (nonpersistent): Case No, Name, Phone, Category, District, Circle, Division, Search and Reset.

Table with sample rows from demo-data.js. Features:

Sticky header, sortable columns, client filtering, pagination (10/25/50).

Action buttons per row: View (modal with details), Edit (drawer with fields; Save does nothing except toast), Delete (confirm modal; simply hides the row in current session array).

Bulk select + bulk “Close” action (visual only).

“Create Case” button opens drawer; closing returns to table.

Knowledgebase (/knowledgebase)

Table with: ID, Title, Status chip (Public/Private), Updated, Actions (Preview modal, Edit opens drawer).

“New Article” button opens drawer with contenteditable area and simple toolbar (bold, italic, bullet, link). Save just toasts and closes.

Officers (/officers/ccf|dcf|acf|rfo)

Segmented tabs across CCF/DCF/ACF/RFO; each shows its own table.

Columns: ID, Name, Circle, Email, Address, Description, Status toggle, Actions (Edit, Delete).

Status toggles are visual only; editing opens a modal and on “Save” shows toast.

Upload (/upload)

Drag-and-drop area + file input.

When a CSV is chosen, parse with FileReader and split by commas; show preview table (first 50 rows). No mapping, no import.

Components & Utilities
table.js

Accepts: columns, rows, pageSizeOptions, enableSelect.

Provides: client sort (asc/desc), text filter, pagination, sticky header, empty state.

Emits DOM events for row:view, row:edit, row:delete, bulk:delete.

modal.js

Creates ARIA-compliant modal: role dialog, labelledby, focus trap, Esc to close, backdrop click to close.

toaster.js

Queue toasts in top-right; types: success, error, info. Auto dismiss.

Drawers

Slide-in panel from right for Create/Edit forms; independent from modal utility.

Forms

Native HTML validation + custom error text.

Inputs: filled style, strong focus ring outline:2px solid var(--ring);.

Demo Data (demo-data.js)

Export small arrays for cases, knowledgebase, and officers for each tab.

Only used to render UI; mutations affect the in-memory arrays for the session only and are not saved anywhere.